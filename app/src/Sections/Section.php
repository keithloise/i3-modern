<?php

namespace {

    use SilverStripe\Core\ClassInfo;
    use SilverStripe\Forms\DropdownField;
    use SilverStripe\Forms\FieldList;
    use SilverStripe\Forms\Tab;
    use SilverStripe\Forms\TabSet;
    use SilverStripe\Forms\TextField;
    use SilverStripe\ORM\DataObject;

    class Section extends DataObject
    {
        private static $default_sort = 'Sort';
        private static $singular_name = 'Content Section';

        private static $db = [
            'Name'    => 'Text',
            'Type'    => 'Varchar',
            'Width'   => 'Varchar',
            'Archive' => 'Boolean',
            'Sort'    => 'Int'
        ];

        private static $has_one = [
            'Page' => Page::class,
        ];

        private static $owns = [

        ];

        private static $summary_fields = [
            'Name',
            'Width',
            'SectionType',
            'Status'
        ];

        private function getSectionTypes()
        {
            $sectionTypes = array();
            $classes = ClassInfo::getValidSubClasses('Section');
            foreach ($classes as $type) {
                $instance = self::singleton($type);
                $sectionTypes[$instance->ClassName] = $instance->singular_name();
            }
            return $sectionTypes;
        }

        public function getCMSFields()
        {
            $fields = new FieldList();
            $fields->push(TabSet::create('Root', $mainTab = Tab::create('Main')));

            if ($this->Type) {
                $fields->addFieldToTab('Root.Main',
                    $rot =  TextField::create('ROType', 'Section type',
                        self::singleton($this->Type)->singular_name()));
                $rot->setDisabled(true);
            } else {
                $fields->addFieldToTab('Root.Main', DropdownField::create("Type", "Section type",
                    $this->getSectionTypes() , $this->ClassName));
            }

            $fields->addFieldToTab('Root.Settings', DropdownField::create('Width', 'Section width',
                SectionWidth::get()->filter('Archived', false)->map('Class', 'Name')));
        }

        public function getSectionCMSFields(FieldList $fields)
        {
            return  $fields;
        }

        public function onBeforeWrite()
        {
            parent::onBeforeWrite(); // TODO: Change the autogenerated stub
            $this->ClassName = $this->SectionType;
            if($this->Name == ''){
                $this->Name = $this->SectionType;
            }
        }
    }
}
